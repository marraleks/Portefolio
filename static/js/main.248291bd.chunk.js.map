{"version":3,"sources":["components/firebase.js","components/Project.js","components/Projects.js","components/Header.js","components/Login.js","components/Edit.js","components/ProjectDetail.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Project","props","styles","backgroundImage","data","defaultImage","backgroundSize","backgroundPosition","backgroundColor","backgroundRepeat","className","comingsoon","onClick","navigate","id","title","style","signedIn","to","window","confirm","firestore","collection","doc","delete","then","console","log","catch","error","Projects","add","timestap","FieldValue","serverTimestamp","projects","length","breakpointCols","default","700","columnClassName","map","project","index","key","Header","useState","show","setShow","color","size","getProps","isPartiallyCurrent","href","target","rel","opacity","Login","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","currentUser","displayName","photoURL","alt","src","signOut","Edit","setProject","status","setStatus","useEffect","onSnapshot","snapshot","updateValue","e","persist","type","existingProject","name","value","parseInt","onSubmit","preventDefault","update","message","onChange","order","input","placeholder","byline","htmlvideo","htmlvideoposter","tech","year","link","description","extra","hidden","accept","storageRef","storage","ref","onUploadStart","onUploadError","onUploadSuccess","filename","child","getDownloadURL","url","onProgress","precentage","ProjectDetail","prev","setPrev","next","setNext","video","useRef","snapshop","orderBy","get","array","docs","myPos","indexOf","scrollTo","top","parallax","height","width","backgroundAttachment","display","mobile","parse","poster","loop","controls","App","setSignedIn","setProjects","onAuthStateChanged","user","basepath","process","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.248291bd.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDDuD9VvedFdkSXbKfIGV9aSmWOnk7cQb4\",\n    authDomain: \"react-blog-firebase-43de4.firebaseapp.com\",\n    databaseURL: \"https://react-blog-firebase-43de4.firebaseio.com\",\n    projectId: \"react-blog-firebase-43de4\",\n    storageBucket: \"react-blog-firebase-43de4.appspot.com\",\n    messagingSenderId: \"1020948357847\",\n    appId: \"1:1020948357847:web:6bedc940343de3ad43c692\",\n    measurementId: \"G-MBJ5DW61LV\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase","import React from 'react'\nimport './Project.css'\nimport { MdDelete } from \"react-icons/md\"\nimport { FaCode } from \"react-icons/fa\"\nimport firebase from './firebase'\nimport { Link, navigate } from '@reach/router'\n\n\n\nconst Project = (props) => {\n    const deleteProject = () => {\n        if(window.confirm('Sure?')){\n            firebase.firestore()\n            .collection('projects')\n            .doc(props.id)\n            .delete()\n            .then(console.log('Document was deleted'))\n            .catch(error => console.log(error))\n        }\n    }\n\n    const styles = {\n        backgroundImage: \"url(\"+ props.data.defaultImage +\")\",\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundColor: '#2B2A29',\n        backgroundRepeat: 'no-repeat',\n    }\n\n    return(\n       \n        <div className={props.comingsoon ? 'spec project':'project'}>\n            <div className=\"afterHover\" onClick={ props.comingsoon ? '' : () => navigate(process.env.PUBLIC_URL + '/projects/' + props.id)}> \n                <h1>{props.data.title}</h1>\n                <p>&mdash; view &mdash;</p>\n            </div>\n            <div className='child' style={styles}>\n                    <div className='overlay' onClick={ props.comingsoon ? '' : () => navigate(process.env.PUBLIC_URL + '/projects/' + props.id)}></div>\n            </div>\n            {\n                props.signedIn &&\n                <div className=\"admin-icons\"> \n                    <Link to={process.env.PUBLIC_URL + '/edit/' + props.id}>\n                        <FaCode className='edit-icons'/>\n                    </Link>\n                    <MdDelete onClick={deleteProject} className='edit-icons'/>\n                </div>\n            }\n        </div>\n    \n    )\n}\n\nexport default Project","import React from 'react'\nimport firebase from './firebase'\nimport Project from './Project'\nimport './Projects.css'\nimport { IoIosAddCircle } from \"react-icons/io\"\nimport { navigate } from '@reach/router'\nimport ClipLoader from \"react-spinners/ClipLoader\"\nimport Masonry from 'react-masonry-css'\n\nconst Projects = (props) => {\n    \n\n    const addProject = () => {\n        firebase.firestore().collection('projects').add(\n            {\n                title:'Projecttitle',\n                timestap: firebase.firestore.FieldValue.serverTimestamp()\n            }\n        )\n        .then( doc  => navigate(process.env.PUBLIC_URL + '/edit/' + doc.id) )\n    }\n    \n\n    return(\n        <main>\n            <div className='intro'>\n                <h1>Marius Aleksander<br/>Sletten<span className=\"red\">.</span></h1>\n                <h1>I am a UX designer<br/>who loves<br/>Front-end<br/>development<span className=\"white\">.</span></h1>\n                <div className='scrollContainer'>\n                    <h5>Scroll down</h5>\n                    <div className='scroll-line'></div>\n                    <div className='scroll-line2'></div>    \n                </div>\n            </div>\n            \n            \n            {\n                props.signedIn &&\n                <div className='add'>\n                    <IoIosAddCircle className='edit-icons' onClick={addProject}/>\n                </div>\n            }\n            <h2>Projects<span>.</span></h2>\n            {\n                    props.projects.length > 0\n                    ?\n            <Masonry\n                    breakpointCols={{\n                        default: 2,\n                        700: 1,\n                      }}\n                    className=\"my-masonry-grid\"\n                    columnClassName=\"my-masonry-grid_column\">\n                {\n                    props.projects.map(\n                        (project, index) => {\n                        if( (index + 1 === props.projects.length) && (props.projects.length % 2 !== 0) ){\n                            // eslint-disable-next-line\n                            return\n                        }\n                        return <Project \n                                comingsoon={\n                                    ((index + 1 === props.projects.length) && (props.projects.length % 2 === 0)) ?true:false} \n                                    key={project.id} data={project.data()} id={project.id} signedIn={props.signedIn} />\n                        }\n                    )\n                }\n            </Masonry>\n            :\n            <ClipLoader/>\n            }\n        </main>\n    )\n}\n\n\nexport default Projects","import React, {useState} from 'react'\nimport { Link } from \"@reach/router\"\nimport './Header.css'\nimport { IoLogoLinkedin } from \"react-icons/io\";\nimport { IoLogoGithub } from \"react-icons/io\";\nimport { IoMdMail } from \"react-icons/io\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { MdOpenInNew } from \"react-icons/md\";\n\n\n\n\nconst Header = (props) => {\n    const [show, setShow] = useState(false)\n\n    const isPartiallyActive = ({\n        isPartiallyCurrent\n    }) => {\n        return isPartiallyCurrent\n        ? { className:'active' }\n        : null\n    }\n\n    return(\n        <div className='header-containter'>\n            <FiMenu className='burger' color='white' size='32' onClick={ () => setShow(!show) }/>\n            <header className={show ? 'visible' : ''} onClick={() => setShow(false)}>\n                <div>\n                    <Link getProps={isPartiallyActive} to={process.env.PUBLIC_URL + '/projects'}>mas<span>.</span></Link>\n                </div>\n                <div className='links'>\n                    <p>Find me on:</p>\n                        <div>\n                            <a href='https://www.linkedin.com/in/marius-aleksander-sletten-92aa3716a/' target=\"_blank\" rel=\"noopener noreferrer\"><IoLogoLinkedin size='24'/> <MdOpenInNew className='none' size='12' opacity='70%'/></a>\n                            <a href='https://github.com/marraleks' target=\"_blank\" rel=\"noopener noreferrer\"><IoLogoGithub size='24'/> <MdOpenInNew className='none' size='12' opacity='70%'/></a>\n                            <a href=\"mailto:marraleks@hotmail.com\" target=\"_top\"><IoMdMail size='24'/><MdOpenInNew className='none' size='12' opacity='70%'/></a>\n                        </div>\n                </div>\n            </header>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport firebase from './firebase'\nimport './Login.css'\n\nconst Login = (props) => {\n    const loginWithGoogle = () => {\n        let provider = new firebase.auth.GoogleAuthProvider()\n        provider.addScope('profile')\n        provider.addScope('email')\n\n        firebase.auth()\n        .signInWithPopup(provider)\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    const logout = () => {\n        firebase.auth().signOut()\n    }\n\n    return(\n        <main className='login'>\n            {\n                !props.signedIn &&\n                <button onClick={loginWithGoogle}>sign in</button>\n            }\n            {\n                props.signedIn && \n                <div>\n                <h1>You are signed in to firebase</h1>\n                <p>Welcome {firebase.auth().currentUser.displayName}</p>\n                {\n                    firebase.auth().currentUser.photoURL &&\n                    <img alt='profile img' src={firebase.auth().currentUser.photoURL}/>\n                }\n                <button onClick={logout}>sign out</button>\n                </div>\n\n            }\n        </main>\n    )\n}\n\nexport default Login","import React, { useState,useEffect } from 'react'\nimport firebase from './firebase'\nimport './Edit.css'\nimport FileUploader from \"react-firebase-file-uploader\";\n\nconst Edit = (props) => {\n\n    const [project, setProject] = useState({})\n    const [status, setStatus] = useState('')\n\n    useEffect( () => {\n        firebase.firestore().collection('projects').doc(props.id)\n        .onSnapshot( snapshot => \n            setProject(snapshot.data() )\n        )\n    }, [props.id] )\n\n    const saveProject = (e) => {\n        setStatus('Updating project, please hold')\n        e.preventDefault()\n        firebase.firestore().collection('projects').doc(props.id)\n            .update(project)\n            .then(() => setStatus('project updated'))\n            .catch(error => console.log(error.message))\n    }\n\n    const updateValue =\n        e => {\n        e.persist()\n        if(e.target.type==='number'){\n            setProject( \n                existingProject => ({\n                ...existingProject,\n                [e.target.name]: parseInt(e.target.value)\n            }))\n            return\n        }\n        setProject( \n            existingProject => ({\n            ...existingProject,\n            [e.target.name]: e.target.value\n        }))\n    }\n    \n    const uploadStart = () => {\n        setStatus('Uploading image, please hold')\n    }\n    const uploadError = (error) => {\n        setStatus(error)\n    }\n    const handleProgress = (precentage) => {\n        console.log(precentage)\n    }\n    const uploadSuccess = filename => {\n        firebase\n            .storage()\n            .ref('images')\n            .child(filename)\n            .getDownloadURL()\n            .then(\n                url => setProject( existingProject => ( {\n                    ...existingProject, \n                    defaultImage: url\n                } ))\n            )\n            setStatus('image uploaded')\n    }\n\n    return(\n        <main className='edit'>\n            <h1>Edit project: {project.title}</h1>\n            <form onSubmit={saveProject}>\n                <input type='number' onChange={updateValue} name='order' value={project.order}/>\n                <input input='text' onChange={updateValue} name='title' value={project.title}/>\n                <input input='text' onChange={updateValue} name='byline' placeholder='Very short description' value={project.byline}/>\n                <input input='text' onChange={updateValue} placeholder='video url' name='htmlvideo' value={project.htmlvideo}/>\n                <input input='text' onChange={updateValue} placeholder='video poster url' name='htmlvideoposter' value={project.htmlvideoposter}/>\n                <input input='text' onChange={updateValue} name='tech' placeholder='Techs used' value={project.tech}/>\n                <input input='text' onChange={updateValue} name='year' placeholder='Month and year' value={project.year}/>\n                <textarea input='text' onChange={updateValue} name='link' placeholder='link' value={project.link}/>\n                <textarea onChange={updateValue} name='description' placeholder='Description of the project' value={project.description}/>\n                <textarea input='text' onChange={updateValue} name='extra' placeholder='html elements' value={project.extra}/>\n                \n                {\n                    project.defaultImage &&\n                    <img src={project.defaultImage} alt='default'/>\n                }\n                <label>\n                <div className='button'>{project.defaultImage ? 'replace' : 'upload'}</div>\n                    <FileUploader\n                        hidden\n                        accept=\"image/*\"\n                        storageRef={firebase.storage().ref('images')}\n                        onUploadStart={uploadStart}\n                        onUploadError={uploadError}\n                        onUploadSuccess={uploadSuccess}\n                        onProgress={handleProgress}\n                    />\n                </label>\n                <button type='submit'>save</button>\n            </form>\n            <p>{status}</p>\n        </main>\n    )\n}\n\nexport default Edit","import React, {useState, useEffect, useRef} from 'react'\nimport './Project.css'\nimport firebase from './firebase'\nimport './ProjectDetail.css'\nimport parse from 'html-react-parser'\nimport { Link } from '@reach/router'\n\n\nconst ProjectDetail = (props) => {\n    const[project, setProject] = useState()\n    const[prev, setPrev] = useState()\n    const[next, setNext] = useState()\n    const video = useRef()\n\n    \n    useEffect(() => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .doc(props.id)\n        .onSnapshot(\n            snapshop => setProject(snapshop.data())\n        )\n    }, [props.id])\n\n    useEffect( () => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .orderBy('order')\n        .get()\n        .then( projects => {\n            const array = projects.docs.map(doc => doc.id)\n            const myPos = array.indexOf(props.id)\n            setNext(myPos + 2 === array.length ? array[0] : array[myPos + 1])\n            setPrev(myPos === 0 ? array[array.length - 2] : array[myPos - 1])\n            window.scrollTo({top:0})\n        })\n    }, [props.id])\n\n\n\n    let styles = {}\n    if(project){\n        styles = {\n            parallax:{\n                backgroundImage: 'url(' + project.defaultImage + ')',\n                height:'100vh',\n                width:'100vw',\n                backgroundAttachment:'fixed',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center center',\n                backgroundRepeat:'no-repeat',\n                display: 'hidden',\n                backgroundColor:'#2B2A29',\n            },\n        }\n    } \n\n    let mobile = {}\n    if(project){\n    mobile = {\n        backgroundImage: 'url(' + project.defaultImage + ')',\n        height:'30vh',\n        width:'100vw',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    }\n}\n\n    return(\n        <main className='detail'>\n            {\n                project \n                ?\n                <>\n                        <div className='parallax' style={styles.parallax}>\n                            <div className='parallax-overlay'>\n                                <h1>{project.title}<span>.</span></h1>\n                            </div>  \n                        </div> \n                        <div className='mobileIntro' style={mobile}>\n                            <div className='overlayIntro'>\n                                <h1>{project.title}<span>.</span></h1>\n                            </div> \n                        </div>\n                    \n                    <div className='projectContainer'>\n                        <div>\n                            <h3>Info</h3>\n                        \n                                {\n                                    project.byline &&\n                                    <div className='projectByline'><b>Type:</b> {project.byline}</div>\n                                }\n                                {    project.tech &&\n                                    <div className='projectTech'><b>Tech:</b> {project.tech}</div>\n                                }\n                                {\n                                    project.year &&\n                                    <div className=\"projectYear\"><b>Date:</b> {project.year}</div>\n                                }\n                                {\n                                    project.link &&\n                                    <div className=\"projectLink\">{parse(project.link)}</div>\n                                }\n                        </div>\n                        \n                        <div>\n                            <h3>Brief</h3>\n                                {\n                                    project.description &&\n                                    <div className='projectDescription'>{project.description}</div>\n                                }\n                        </div>\n                    </div>\n                                {\n                                    project.htmlvideo && \n                                    <div className='project-video'>\n                                        <video ref={video} poster={project.htmlvideoposter} loop controls>\n                                            <source src={project.htmlvideo} type=\"video/mp4\" />\n                                        </video>\n                                            \n                                    </div>\n                                }\n                                {\n                                    project.extra && \n                                <div className='projectExtra'>{ parse(project.extra)}</div>\n                                }\n                                <div className='pager'>\n                                    <Link to={process.env.PUBLIC_URL + '/projects/' + prev}>prev project</Link>\n                                    <Link to={process.env.PUBLIC_URL + '/projects/' + next}>next project</Link>\n                                </div>\n                </>\n                :\n                    <h2>Fetching Project, hold on</h2>\n                }\n        </main>\n        \n    \n    )\n}\n\nexport default ProjectDetail","import React, {useState, useEffect} from 'react';\nimport { Router, } from \"@reach/router\"\nimport './App.css';\nimport firebase from './components/firebase'\nimport Projects from './components/Projects'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Edit from './components/Edit'\nimport ProjectDetail from './components/ProjectDetail'\n\n\n\nconst App = () => {\n\n  const [signedIn, setSignedIn] = useState(false)\n  const [projects, setProjects] = useState([])\n\n    useEffect(() => {\n        firebase\n        .firestore()\n        .collection('projects')\n        .orderBy('order', 'asc')\n        .onSnapshot(\n            snapshop => setProjects(snapshop.docs)\n        )\n    }, [])\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(\n      user => {\n        if(user){\n          setSignedIn(true)\n        }else{\n          setSignedIn(false)\n        }\n      }\n    )\n  })\n\n  return(\n    <div>\n      <Header signedIn={signedIn}/>\n      <Router basepath={process.env.PUBLIC_URL}>\n        <Projects projects={projects} default path='/projects' signedIn={signedIn}/>\n        <Login signedIn={signedIn} setSignedIn={setSignedIn} path='/login'/>\n        <Edit path='/edit/:id'/>\n        <ProjectDetail path='/projects/:id'/>\n      </Router>\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}